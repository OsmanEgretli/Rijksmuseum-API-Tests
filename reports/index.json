{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-21T17:23:53.129Z",
    "end": "2025-03-21T17:23:55.056Z",
    "duration": 1927,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b6b2fb16-369e-4b89-8e13-cfe816d496f2",
      "title": "",
      "fullFile": "/Users/oegretli/Desktop/RestAssured/tests/rijksmuseum.test.js",
      "file": "/tests/rijksmuseum.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "34a76bd2-8bc5-4c37-ab8b-bca83fc8250f",
          "title": "Rijksmuseum API Tests",
          "fullFile": "/Users/oegretli/Desktop/RestAssured/tests/rijksmuseum.test.js",
          "file": "/tests/rijksmuseum.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Rijksmuseum API Tests\"",
              "fullTitle": "Rijksmuseum API Tests \"before each\" hook in \"Rijksmuseum API Tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "startTime = Date.now();",
              "err": {},
              "uuid": "8471213c-43fb-4da7-adb1-ec05aeb1905e",
              "parentUUID": "34a76bd2-8bc5-4c37-ab8b-bca83fc8250f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Rijksmuseum API Tests\"",
              "fullTitle": "Rijksmuseum API Tests \"after each\" hook in \"Rijksmuseum API Tests\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const duration = Date.now() - startTime;\nconsole.log(`Test duration: ${duration}ms`);",
              "err": {},
              "uuid": "7f123c93-63d3-44ec-9cac-2ba18a7161e1",
              "parentUUID": "34a76bd2-8bc5-4c37-ab8b-bca83fc8250f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "eb67c63d-1349-4bb9-9df7-e3efb5b5238c",
              "title": "Collection Endpoints",
              "fullFile": "/Users/oegretli/Desktop/RestAssured/tests/rijksmuseum.test.js",
              "file": "/tests/rijksmuseum.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get collection items with pagination and validate response structure",
                  "fullTitle": "Rijksmuseum API Tests Collection Endpoints should get collection items with pagination and validate response structure",
                  "timedOut": false,
                  "duration": 1274,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await request(BASE_URL)\n    .get('/collection')\n    .query({\n        key: API_KEY,\n        format: 'json',\n        p: 1,\n        ps: 10\n    });\nexpect(response.status).to.equal(200);\nexpect(response.body).to.have.property('artObjects');\nexpect(response.body.artObjects).to.be.an('array');\nexpect(response.body.artObjects.length).to.be.at.most(10);\n\n// Additional validation for response structure\nif (response.body.artObjects.length > 0) {\n    const firstItem = response.body.artObjects[0];\n    expect(firstItem).to.have.property('id');\n    expect(firstItem).to.have.property('objectNumber');\n    expect(firstItem).to.have.property('title');\n}",
                  "err": {},
                  "uuid": "a361a1ae-ecc0-4903-b5cf-bf930bff7403",
                  "parentUUID": "eb67c63d-1349-4bb9-9df7-e3efb5b5238c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should get specific artwork details and validate all required fields",
                  "fullTitle": "Rijksmuseum API Tests Collection Endpoints should get specific artwork details and validate all required fields",
                  "timedOut": false,
                  "duration": 234,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const objectNumber = 'SK-C-5'; // The Night Watch\nresponse = await request(BASE_URL)\n    .get(`/collection/${objectNumber}`)\n    .query({\n        key: API_KEY,\n        format: 'json'\n    });\nexpect(response.status).to.equal(200);\nexpect(response.body).to.have.property('artObject');\n\nconst artObject = response.body.artObject;\nexpect(artObject).to.have.property('objectNumber', objectNumber);\nexpect(artObject).to.have.property('title');\nexpect(artObject).to.have.property('principalMaker');\nexpect(artObject).to.have.property('longTitle');\nexpect(artObject).to.have.property('webImage');\n\n// Validate webImage structure\nif (artObject.webImage) {\n    expect(artObject.webImage).to.have.property('url');\n    expect(artObject.webImage).to.have.property('width');\n    expect(artObject.webImage).to.have.property('height');\n}",
                  "err": {},
                  "uuid": "97ab8a8b-0b48-4ad8-95ec-4ff3d068abba",
                  "parentUUID": "eb67c63d-1349-4bb9-9df7-e3efb5b5238c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should search collection with multiple parameters and validate search results",
                  "fullTitle": "Rijksmuseum API Tests Collection Endpoints should search collection with multiple parameters and validate search results",
                  "timedOut": false,
                  "duration": 248,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await request(BASE_URL)\n    .get('/collection')\n    .query({\n        key: API_KEY,\n        format: 'json',\n        q: 'Rembrandt',\n        type: 'painting',\n        p: 1,\n        ps: 20\n    });\nexpect(response.status).to.equal(200);\nexpect(response.body).to.have.property('artObjects');\nexpect(response.body.artObjects).to.be.an('array');\n\n// Validate search results\nif (response.body.artObjects.length > 0) {\n    console.log(response.body.artObjects[0]);  \n    const firstResult = response.body.artObjects[0];\n    expect(firstResult).to.have.property('title');\n    expect(firstResult).to.have.property('objectNumber');\n    expect(firstResult).to.have.property('principalOrFirstMaker');\n    \n    // Validate search relevance\n    expect(firstResult.title.toLowerCase()).to.include('self-portrait');\n}",
                  "err": {},
                  "uuid": "132bef33-82f9-4292-967e-fd0d0f950c6b",
                  "parentUUID": "eb67c63d-1349-4bb9-9df7-e3efb5b5238c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle invalid API key and validate error response",
                  "fullTitle": "Rijksmuseum API Tests Collection Endpoints should handle invalid API key and validate error response",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await request(BASE_URL)\n    .get('/collection')\n    .query({\n        key: 'invalid_key',\n        format: 'json'\n    });\nexpect(response.status).to.equal(401);\nexpect(response.body).to.include('Invalid key');",
                  "err": {},
                  "uuid": "2fd6175c-bcae-4342-b90b-df119df53182",
                  "parentUUID": "eb67c63d-1349-4bb9-9df7-e3efb5b5238c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a361a1ae-ecc0-4903-b5cf-bf930bff7403",
                "97ab8a8b-0b48-4ad8-95ec-4ff3d068abba",
                "132bef33-82f9-4292-967e-fd0d0f950c6b",
                "2fd6175c-bcae-4342-b90b-df119df53182"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1922,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "index",
        "inlineAssets": "true",
        "charts": "true",
        "[object Object]": true
      },
      "version": "6.2.0"
    }
  }
}